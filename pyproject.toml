[build-system]
requires = ["scikit-build-core>=0.3.3", "pybind11"]
build-backend = "scikit_build_core.build"


[project]
name = "rcsss"
version = "0.0.2"
description="Python Interface for libfranka to control the Franka Research 3 Robot"
dependencies = ["websockets>=11.0",
    "requests~=2.31",
    "numpy~=1.26",
    "typer~=0.9",
    "pydantic~=2.6",
    "gymnasium",
    "pydantic_yaml~=1.3",
    "absl-py",
    "etils[epath]",
    "glfw",
    "numpy",
    "pyopengl",
]
readme = "README.md"
authors = [
  { name = "Tobias JÃ¼lg", email = "tobias.juelg@utn.de" },
]
requires-python = ">=3.10"
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: GNU Affero General Public License v3 (AGPLv3)",
  "Programming Language :: Python :: 3",
]

# until https://github.com/pypa/pip/issues/11440 is resolved
# we use requirements_dev.txt for linter and formatter dependencies
# [project.optional-dependencies]
# dev = [
#     "ruff==0.3.2",
#     "black==24.1.1",
#     "isort==5.13.2",
#     "mypy==1.4.1",
# ]


[tool.scikit-build]
cmake.verbose=true
logging.level = "INFO"
build-dir = "build"
wheel.packages = ["python/rcsss", "python/mujoco"]
cmake.targets = ["_core", "_callbacks", "_constants", "_enums", "_errors", "_functions", "_render", "_rollout", "_simulate", "_structs"]
install.components = ["python_package"]
sdist.include = ["python/mujoco"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  # "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
#   "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
#   "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR09",    # Too many X
  "PLR2004",  # Magic comparison
  "E741",    # ambiguous variable name
  "ICN001",  #  `numpy` should be imported as `np`
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    "C",
    "R",
    "fixme",
    "logging-fstring-interpolation",
    "unspecified-encoding",
    "broad-exception-raised",
    "broad-exception-caught"
]

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
pretty = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv"
testpaths = [
    "python/tests",
]